---

- name: Ubuntu desktop environment playbook
  hosts: localhost
  vars:
    - go_version: 1.8
  environment:
    DEBIAN_FRONTEND: noninteractive
  pre_tasks:
    - name: check .gvm does not exist
      stat:
        path: ~/.gvm
      register: stat_gvm_result

  roles:
    # Common roles
    # - { role: locales, become: true }
    - { role: common, become: true }
    # - { role: zsh, become: true }
    # - { role: dotfiles, become: true }
    # - { role: java-openjdk, become: true }
    # - { role: projects-installer }
    # Server roles
    # - { role: apache2, become: true }
    # - { role: apache2-php, become: true }
    - { role: docker, become: true }
    - role: suzuki-shunsuke.gvm
      when: stat_gvm_result.stat.exists == False
    - role: suzuki-shunsuke.gvm-module
    # - { role: gvm, become: true }
    - { role: nodejs, become: true }
    - { role: python, become: true }
    # - { role: rbenv, become: true }
    - { role: ssh, become: true }
    # Desktop roles
    # - { role: desktop, become: true }
    - { role: desktop-cleanup, become: true }
    # - { role: desktop-autostart, become: true }
    # - { role: desktop-preferences-unity }
    - { role: atom, become: true }
    - { role: cmprescott.chrome, become: true }
    - { role: gdrive, become: true }
    # - { role: remmina, become: true }
    # - { role: skype, become: true }
    # - { role: smartgit, become: true }
    # - { role: spotify, become: true }
    # - { role: teamviewer, become: true }
    - { role: vagrant, become: true }
    - { role: virtualbox, become: true }
    # - { role: wine, become: true }
    # bspwm
    # - { role: sxhkd, become: true }
    # - { role: bspwm, become: true }
    # - { role: bspwm-panel, become: true }
    # - { role: bspwm-environment, become: true }
    # User roles
    # - { role: gulp}
    # - { role: browsersync }
    # - { role: bower }
    # - { role: webpack }

  tasks:
    - name: Ensure ssh key generated ready to upload to GitHub and GitLab
      command: ssh-keygen -t rsa -f "{{ ssh.key_pair_path }}" -N ''
      args:
        creates: "{{ ssh.key_pair_path }}"
    - name: Wait until creds-for-curl-github.netrc is created from creds-for-curl-github.netrc.template and updated with GitHub access key with scope write:public_key
      wait_for:
        path: creds-for-curl-github.netrc
        search_regex: .*password\s\w+
    - name: Upload SSH key to GitHub
      shell: KEY=$( cat {{ ssh.key_pair_path }}.pub );TITLE=${KEY/* };JSON=$( jo title="$TITLE" key="$KEY" );curl --netrc-file creds-for-curl-github.netrc -d "$JSON" https://api.github.com/user/keys
      args:
        executable: /bin/bash
    - name: Wait until creds-for-curl-gitlab.txt is created from creds-for-curl-gitlab.txt.template and updated with GitLab access key with scope api
      wait_for:
        path: creds-for-curl-gitlab.txt
        search_regex: .*PRIVATE-TOKEN:\s\w+
    - name: Upload SSH key to GitLab
      shell: KEY=$( cat {{ ssh.key_pair_path }}.pub );TITLE=${KEY/* };curl -X POST -K creds-for-curl-gitlab.txt -F "title=$TITLE" -F "key=$KEY" "https://gitlab.com/api/v4/user/keys"
      args:
        executable: /bin/bash
    - name: Change to git protocol
      shell: git remote set-url origin git@github.com:matthewcosgrove/ansible-ubuntu.git
      args:
        executable: /bin/bash
    - name: Install libgnome-keyring-dev for git credential helper
      apt: pkg=libgnome-keyring-dev state=latest
      become: true
    - name: Set up gnome-keyring for git credential helper
      command: make --directory=/usr/share/doc/git/contrib/credential/gnome-keyring
      become: true
    - name: Set up git credential helper
      git_config:
        name: credential.helper
        scope: global
        value: /usr/share/doc/git/contrib/credential/gnome-keyring/git-credential-gnome-keyring
    - name: Set up git to suppress message on push
      git_config:
        name: push.default
        scope: global
        # value: simple
    - name: update git config globally setting user.email
      git_config:
        name: user.email
        scope: global
        value: mc.matthew.cosgrove@gmail.com
    - name: update git config globally setting user.name
      git_config:
        name: user.name
        scope: global
        value: matthewcosgrove
    - name: update git config globally setting alias for git status as git st
      git_config:
        name: alias.st
        scope: global
        value: status
    - name: Upgrade ssh to 7.5 (download binaries)
      shell: wget -nc "{{ item }}" -P /tmp/ssh-install
      with_items:
        - https://launchpadlibrarian.net/298453060/libkrb5support0_1.14.3+dfsg-2ubuntu1_amd64.deb
        - https://launchpadlibrarian.net/298453058/libkrb5-3_1.14.3+dfsg-2ubuntu1_amd64.deb
        - https://launchpadlibrarian.net/298453050/libgssapi-krb5-2_1.14.3+dfsg-2ubuntu1_amd64.deb
        - https://launchpadlibrarian.net/335526589/openssh-client_7.5p1-10_amd64.deb
      become: true
    - name: Upgrade ssh to 7.5 (install binaries)
      shell: sudo dpkg -i "{{ item }}"
      with_items:
        - /tmp/ssh-install/libkrb5support0_1.14.3+dfsg-2ubuntu1_amd64.deb
        - /tmp/ssh-install/libkrb5-3_1.14.3+dfsg-2ubuntu1_amd64.deb
        - /tmp/ssh-install/libgssapi-krb5-2_1.14.3+dfsg-2ubuntu1_amd64.deb
        - /tmp/ssh-install/openssh-client_7.5p1-10_amd64.deb
    - name: fix dependency issues as a result of manual upgrade of ssh client
      shell: apt-get -yqf install
      become: true
    - name: gvm install go{{go_version}} --binary
      gvm:
        version: go{{go_version}}
        gvm_root: "~/.gvm"
        binary: yes
